pages = [{"l":"api/index.html","n":"API","t":" API","d":"api"},
{"l":"api/org/rogach/scallop.html","n":"org.rogach.scallop","t":"package org.rogach.scallop","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"fileConverter","t":"val fileConverter: ValueConverter[File]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"fileListConverter","t":"val fileListConverter: ValueConverter[List[File]]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"pathConverter","t":"val pathConverter: ValueConverter[Path]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"pathListConverter","t":"val pathListConverter: ValueConverter[List[Path]]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"uriConverter","t":"val uriConverter: ValueConverter[URI]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop.html","n":"urlConverter","t":"val urlConverter: ValueConverter[URL]","d":"org/rogach/scallop"},
{"l":"api/org/rogach/scallop/ArgType$.html","n":"ArgType","t":"object ArgType","d":"org/rogach/scallop/ArgType$"},
{"l":"api/org/rogach/scallop/ArgType$$V.html","n":"V","t":"class V(val fn: String => String)","d":"org/rogach/scallop/ArgType$$V"},
{"l":"api/org/rogach/scallop/ArgType$$V.html","n":"fn","t":"val fn: String => String","d":"org/rogach/scallop/ArgType$$V"},
{"l":"api/org/rogach/scallop/ArgType$$FLAG$.html","n":"FLAG","t":"object FLAG extends V","d":"org/rogach/scallop/ArgType$$FLAG$"},
{"l":"api/org/rogach/scallop/ArgType$$SINGLE$.html","n":"SINGLE","t":"object SINGLE extends V","d":"org/rogach/scallop/ArgType$$SINGLE$"},
{"l":"api/org/rogach/scallop/ArgType$$LIST$.html","n":"LIST","t":"object LIST extends V","d":"org/rogach/scallop/ArgType$$LIST$"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"CliOption","t":"trait CliOption","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"converter","t":"def converter: ValueConverter[_]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"name","t":"def name: String","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"descr","t":"def descr: String","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"required","t":"def required: Boolean","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"validator","t":"def validator: Any => Boolean","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"default","t":"def default: () => Option[Any]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"hidden","t":"def hidden: Boolean","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/CliOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/CliOption"},
{"l":"api/org/rogach/scallop/Compat$.html","n":"Compat","t":"object Compat","d":"org/rogach/scallop/Compat$"},
{"l":"api/org/rogach/scallop/Compat$.html","n":"exit","t":"def exit(code: Int): Nothing","d":"org/rogach/scallop/Compat$"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"DefaultConverters","t":"trait DefaultConverters","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"flagConverter","t":"val flagConverter: ValueConverter[Boolean]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"singleArgConverter","t":"def singleArgConverter[A](conv: String => A, handler: PartialFunction[Throwable, Either[String, Option[A]]]): ValueConverter[A]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"charConverter","t":"val charConverter: ValueConverter[Char]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"stringConverter","t":"val stringConverter: ValueConverter[String]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"numberHandler","t":"def numberHandler[T](name: String): PartialFunction[Throwable, Either[String, Option[T]]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"byteConverter","t":"val byteConverter: ValueConverter[Byte]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"shortConverter","t":"val shortConverter: ValueConverter[Short]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"intConverter","t":"val intConverter: ValueConverter[Int]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"longConverter","t":"val longConverter: ValueConverter[Long]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"floatConverter","t":"val floatConverter: ValueConverter[Float]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"doubleConverter","t":"val doubleConverter: ValueConverter[Double]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"bigIntConverter","t":"val bigIntConverter: ValueConverter[BigInt]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"bigDecimalConverter","t":"val bigDecimalConverter: ValueConverter[BigDecimal]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"durationConverter","t":"val durationConverter: ValueConverter[Duration]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"finiteDurationConverter","t":"val finiteDurationConverter: ValueConverter[FiniteDuration]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"listArgConverter","t":"def listArgConverter[A](conv: String => A): ValueConverter[List[A]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"byteListConverter","t":"val byteListConverter: ValueConverter[List[Byte]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"shortListConverter","t":"val shortListConverter: ValueConverter[List[Short]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"intListConverter","t":"val intListConverter: ValueConverter[List[Int]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"longListConverter","t":"val longListConverter: ValueConverter[List[Long]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"floatListConverter","t":"val floatListConverter: ValueConverter[List[Float]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"doubleListConverter","t":"val doubleListConverter: ValueConverter[List[Double]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"stringListConverter","t":"val stringListConverter: ValueConverter[List[String]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"propsConverter","t":"def propsConverter[A](conv: ValueConverter[A]): ValueConverter[Map[String, A]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"bytePropsConverter","t":"val bytePropsConverter: ValueConverter[Map[String, Byte]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"shortPropsConverter","t":"val shortPropsConverter: ValueConverter[Map[String, Short]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"intPropsConverter","t":"val intPropsConverter: ValueConverter[Map[String, Int]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"longPropsConverter","t":"val longPropsConverter: ValueConverter[Map[String, Long]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"floatPropsConverter","t":"val floatPropsConverter: ValueConverter[Map[String, Float]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"doublePropsConverter","t":"val doublePropsConverter: ValueConverter[Map[String, Double]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"charPropsConverter","t":"val charPropsConverter: ValueConverter[Map[String, Char]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"stringPropsConverter","t":"val stringPropsConverter: ValueConverter[Map[String, String]]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"tallyConverter","t":"val tallyConverter: ValueConverter[Int]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/DefaultConverters.html","n":"optDefault","t":"def optDefault[A](default: A)(conv: ValueConverter[A]): ValueConverter[A]","d":"org/rogach/scallop/DefaultConverters"},
{"l":"api/org/rogach/scallop/Formatter$.html","n":"Formatter","t":"object Formatter","d":"org/rogach/scallop/Formatter$"},
{"l":"api/org/rogach/scallop/Formatter$.html","n":"format","t":"def format(s: List[Either[String, HelpInfo]], width: Option[Int], appendDefault: Boolean): String","d":"org/rogach/scallop/Formatter$"},
{"l":"api/org/rogach/scallop/Formatter$.html","n":"wrap","t":"def wrap(s: Seq[String], width: Int): List[String]","d":"org/rogach/scallop/Formatter$"},
{"l":"api/org/rogach/scallop/HelpInfo.html","n":"HelpInfo","t":"class HelpInfo(argLine: String, description: String, defaultValue: () => Option[String])","d":"org/rogach/scallop/HelpInfo"},
{"l":"api/org/rogach/scallop/LazyMap.html","n":"LazyMap","t":"class LazyMap[A, +B](under: => Map[A, B], val cliOption: Option[CliOption]) extends Map[A, B] with ScallopOptionBase","d":"org/rogach/scallop/LazyMap"},
{"l":"api/org/rogach/scallop/LazyMap.html","n":"get","t":"def get(key: A): Option[B]","d":"org/rogach/scallop/LazyMap"},
{"l":"api/org/rogach/scallop/LazyMap.html","n":"iterator","t":"def iterator: Iterator[(A, B)]","d":"org/rogach/scallop/LazyMap"},
{"l":"api/org/rogach/scallop/LazyMap.html","n":"removed","t":"def removed(key: A): Map[A, B]","d":"org/rogach/scallop/LazyMap"},
{"l":"api/org/rogach/scallop/LazyMap.html","n":"updated","t":"def updated[B1 >: B](key: A, value: B1): Map[A, B1]","d":"org/rogach/scallop/LazyMap"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"LongNamedPropertyOption","t":"class LongNamedPropertyOption(name: String, descr: String, converter: ValueConverter[_], keyName: String, valueName: String, hidden: Boolean) extends CliOption","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"validator","t":"def validator: Any => Boolean","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"default","t":"def default: () => Option[Any]","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"required","t":"def required: Boolean","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/LongNamedPropertyOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/LongNamedPropertyOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"NumberArgOption","t":"class NumberArgOption(name: String, required: Boolean, descr: String, converter: ValueConverter[Long], validator: Any => Boolean, default: () => Option[Long], hidden: Boolean) extends CliOption","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/NumberArgOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/NumberArgOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"PropertyOption","t":"class PropertyOption(name: String, short: Char, descr: String, converter: ValueConverter[_], keyName: String, valueName: String, hidden: Boolean) extends CliOption","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"validator","t":"def validator: Any => Boolean","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"default","t":"def default: () => Option[Any]","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"required","t":"def required: Boolean","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/PropertyOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/PropertyOption"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"Scallop","t":"class Scallop(args: Seq[String], opts: List[CliOption], mainOptions: List[CliOption], optionGroups: List[(String, Seq[CliOption])], vers: Option[String], bann: Option[String], foot: Option[String], descr: String, helpWidth: Option[Int], shortSubcommandsHelp: Boolean, appendDefaultToDescription: Boolean, noshort: Boolean, helpFormatter: ScallopHelpFormatter, subbuilders: List[(String, Scallop)]) extends ScallopArgListLoader","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"parent","t":"var parent: Option[Scallop]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"Parsed","t":"type Parsed = List[CliOptionInvocation]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getOptionWithShortName","t":"def getOptionWithShortName(c: Char): Option[CliOption]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getOptionShortNames","t":"def getOptionShortNames(opt: CliOption): List[Char]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"appendOption","t":"def appendOption(option: CliOption): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"addSubBuilder","t":"def addSubBuilder(nameAndAliases: Seq[String], builder: Scallop): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"findSubbuilder","t":"def findSubbuilder(name: String): Option[Scallop]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getSubcommandName","t":"def getSubcommandName: Option[String]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getSubbuilder","t":"def getSubbuilder: Option[Scallop]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getSubcommandArgs","t":"def getSubcommandArgs: List[String]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getSubcommandNames","t":"def getSubcommandNames: List[String]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getAllSuppliedOptionNames","t":"def getAllSuppliedOptionNames: List[String]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"version","t":"def version(v: String): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"banner","t":"def banner(b: String): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"footer","t":"def footer(f: String): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"setHelpWidth","t":"def setHelpWidth(w: Int): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"help","t":"def help: String","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getFullHelpString","t":"def getFullHelpString(): String","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"printHelp","t":"def printHelp(): Unit","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"args","t":"def args(a: Seq[String]): Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"isSupplied","t":"def isSupplied(name: String): Boolean","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"get","t":"def get(name: String): Option[Any]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"get","t":"def get(name: Char): Option[Any]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"apply","t":"def apply(name: String): Any","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"apply","t":"def apply(name: Char): Any","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"prop","t":"def prop(name: Char, key: String): Option[Any]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getHelpOption","t":"val getHelpOption: CliOption","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"getVersionOption","t":"val getVersionOption: Option[CliOption]","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"verify","t":"def verify: Scallop","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"summary","t":"def summary: String","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop.html","n":"filteredSummary","t":"def filteredSummary(blurred: Set[String]): String","d":"org/rogach/scallop/Scallop"},
{"l":"api/org/rogach/scallop/Scallop$CliOptionInvocation.html","n":"CliOptionInvocation","t":"class CliOptionInvocation(opt: CliOption, invocation: String, args: List[String], error: Option[ScallopException])","d":"org/rogach/scallop/Scallop$CliOptionInvocation"},
{"l":"api/org/rogach/scallop/Scallop$ParseResult.html","n":"ParseResult","t":"class ParseResult(opts: Parsed, subcommand: Option[String], subcommandArgs: List[String])","d":"org/rogach/scallop/Scallop$ParseResult"},
{"l":"api/org/rogach/scallop/ScallopArgListLoader.html","n":"ScallopArgListLoader","t":"trait ScallopArgListLoader","d":"org/rogach/scallop/ScallopArgListLoader"},
{"l":"api/org/rogach/scallop/ScallopArgListLoader.html","n":"loadArgList","t":"def loadArgList(args: Seq[String]): Seq[String]","d":"org/rogach/scallop/ScallopArgListLoader"},
{"l":"api/org/rogach/scallop/ScallopConf.html","n":"ScallopConf","t":"class ScallopConf(args: Seq[String], commandNameAndAliases: Seq[String]) extends ScallopConfBase","d":"org/rogach/scallop/ScallopConf"},
{"l":"api/org/rogach/scallop/ScallopConf.html","n":"guessOptionName","t":"def guessOptionName: Boolean","d":"org/rogach/scallop/ScallopConf"},
{"l":"api/org/rogach/scallop/ScallopConf.html","n":"guessOptionName_=","t":"def guessOptionName_=(v: Boolean): Unit","d":"org/rogach/scallop/ScallopConf"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"ScallopConfBase","t":"class ScallopConfBase(val args: Seq[String], val commandNameAndAliases: Seq[String]) extends ScallopConfValidations","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"args","t":"val args: Seq[String]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"addSubcommand","t":"def addSubcommand(conf: Subcommand): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"builder","t":"var builder: Scallop","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"appendDefaultToDescription","t":"def appendDefaultToDescription: Boolean","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"appendDefaultToDescription_=","t":"def appendDefaultToDescription_=(v: Boolean): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"helpFormatter","t":"def helpFormatter: ScallopHelpFormatter","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"helpFormatter_=","t":"def helpFormatter_=(formatter: ScallopHelpFormatter): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"noshort","t":"def noshort: Boolean","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"noshort_=","t":"def noshort_=(v: Boolean): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"subcommand","t":"def subcommand: Option[ScallopConfBase]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"subcommands","t":"def subcommands: List[ScallopConfBase]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"opt","t":"def opt[A](name: String, short: Char, descr: String, default: => Option[A], validate: A => Boolean, required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"choice","t":"def choice(choices: Seq[String], name: String, short: Char, descr: String, default: => Option[String], required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[String]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"tally","t":"def tally(name: String, short: Char, descr: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[Int]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"props","t":"def props[A](name: Char, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): LazyMap[String, A]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"propsLong","t":"def propsLong[A](name: String, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): Map[String, A]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"trailArg","t":"def trailArg[A](name: String, descr: String, validate: A => Boolean, required: Boolean, default: => Option[A], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"number","t":"def number(name: String, descr: String, validate: Long => Boolean, required: Boolean, default: => Option[Long], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Long]): ScallopOption[Long]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"toggle","t":"def toggle(name: String, default: => Option[Boolean], short: Char, noshort: Boolean, prefix: String, descrYes: String, descrNo: String, required: Boolean, hidden: Boolean, group: ScallopOptionGroup): ScallopOption[Boolean]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"mainOptions","t":"def mainOptions: Seq[CliOption]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"mainOptions_=","t":"def mainOptions_=(newMainOptions: => Seq[ScallopOption[_]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"group","t":"def group(header: String): ScallopOptionGroup","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"printedName","t":"var printedName: String","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"errorMessageHandler","t":"var errorMessageHandler: String => Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"exitHandler","t":"var exitHandler: Int => Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"stdoutPrintln","t":"var stdoutPrintln: String => Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"stderrPrintln","t":"var stderrPrintln: String => Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"assertVerified","t":"def assertVerified(): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"addValidation","t":"def addValidation(fn: => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"dependsOnAny","t":"def dependsOnAny(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"dependsOnAll","t":"def dependsOnAll(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"conflicts","t":"def conflicts(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"requireAtLeastOne","t":"def requireAtLeastOne(list: ScallopOption[_]*): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"requireOne","t":"def requireOne(list: ScallopOption[_]*): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"mutuallyExclusive","t":"def mutuallyExclusive(list: ScallopOption[_]*): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"codependent","t":"def codependent(list: ScallopOption[_]*): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"allDefinedOrUndefined","t":"def allDefinedOrUndefined(list: ScallopOption[_]*): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFileExists","t":"def validateFileExists(fileOption: ScallopOption[File]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFileDoesNotExist","t":"def validateFileDoesNotExist(fileOption: ScallopOption[File]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFileIsDirectory","t":"def validateFileIsDirectory(fileOption: ScallopOption[File]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFileIsFile","t":"def validateFileIsFile(fileOption: ScallopOption[File]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFilesExist","t":"def validateFilesExist(filesOption: ScallopOption[List[File]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFilesDoNotExist","t":"def validateFilesDoNotExist(filesOption: ScallopOption[List[File]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFilesIsDirectory","t":"def validateFilesIsDirectory(filesOption: ScallopOption[List[File]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validateFilesIsFile","t":"def validateFilesIsFile(filesOption: ScallopOption[List[File]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathExists","t":"def validatePathExists(pathOption: ScallopOption[Path]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathDoesNotExist","t":"def validatePathDoesNotExist(pathOption: ScallopOption[Path]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathIsDirectory","t":"def validatePathIsDirectory(pathOption: ScallopOption[Path]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathIsFile","t":"def validatePathIsFile(pathOption: ScallopOption[Path]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathsExists","t":"def validatePathsExists(pathsOption: ScallopOption[List[Path]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathsDoesNotExist","t":"def validatePathsDoesNotExist(pathsOption: ScallopOption[List[Path]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathsIsDirectory","t":"def validatePathsIsDirectory(pathsOption: ScallopOption[List[Path]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"validatePathsIsFile","t":"def validatePathsIsFile(pathsOption: ScallopOption[List[Path]]): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"requireSubcommand","t":"def requireSubcommand(): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"summary","t":"def summary: String","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"filteredSummary","t":"def filteredSummary(blurred: Set[String]): String","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"getHelpString","t":"def getHelpString(): String","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"getFullHelpString","t":"def getFullHelpString(): String","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"getVersionString","t":"def getVersionString(): Option[String]","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"printHelp","t":"def printHelp(): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"version","t":"def version(v: String): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"banner","t":"def banner(b: String): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"footer","t":"def footer(f: String): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"helpWidth","t":"def helpWidth(w: Int): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"shortSubcommandsHelp","t":"def shortSubcommandsHelp(enable: Boolean): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfBase.html","n":"verify","t":"def verify(): Unit","d":"org/rogach/scallop/ScallopConfBase"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"ScallopConfValidations","t":"trait ScallopConfValidations","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validations","t":"var validations: List[() => Either[String, Unit]]","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1](o1: ScallopOption[A1])(fn: A1 => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2](o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (A1, A2) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (A1, A2, A3) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (A1, A2, A3, A4) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (A1, A2, A3, A4, A5) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (A1, A2, A3, A4, A5, A6) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (A1, A2, A3, A4, A5, A6, A7) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (A1, A2, A3, A4, A5, A6, A7, A8) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validate","t":"def validate[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1](o1: ScallopOption[A1])(fn: Option[A1] => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2](o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (Option[A1], Option[A2]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (Option[A1], Option[A2], Option[A3]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (Option[A1], Option[A2], Option[A3], Option[A4]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopConfValidations.html","n":"validateOpt","t":"def validateOpt[A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21], Option[A22]) => Either[String, Unit]): Unit","d":"org/rogach/scallop/ScallopConfValidations"},
{"l":"api/org/rogach/scallop/ScallopHelpFormatter.html","n":"ScallopHelpFormatter","t":"class ScallopHelpFormatter","d":"org/rogach/scallop/ScallopHelpFormatter"},
{"l":"api/org/rogach/scallop/ScallopHelpFormatter.html","n":"formatHelp","t":"def formatHelp(s: Scallop, subcommandPrefix: String): String","d":"org/rogach/scallop/ScallopHelpFormatter"},
{"l":"api/org/rogach/scallop/ScallopHelpFormatter.html","n":"getChoiceHelpText","t":"def getChoiceHelpText(description: String, choices: Seq[String]): String","d":"org/rogach/scallop/ScallopHelpFormatter"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"ScallopOption","t":"class ScallopOption[A](nm: () => String, val cliOption: Option[CliOption], val _transformCount: Int) extends ScallopOptionBase","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"_transformCount","t":"val _transformCount: Int","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"fn","t":"val fn: String => Option[A]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"supplied","t":"val supplied: String => Boolean","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"name","t":"def name: String","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"get","t":"def get: Option[A]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"toOption","t":"def toOption: Option[A]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"apply","t":"def apply(): A","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"getOrElse","t":"def getOrElse(default: => A): A","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"isSupplied","t":"def isSupplied: Boolean","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"collect","t":"def collect[B](pf: PartialFunction[A, B]): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"filter","t":"def filter(p: A => Boolean): ScallopOption[A]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"filterNot","t":"def filterNot(p: A => Boolean): ScallopOption[A]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"withFilter","t":"def withFilter(p: A => Boolean): WithFilter","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"map","t":"def map[B](f: A => B): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"foreach","t":"def foreach(f: A => Unit): Unit","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"flatMap","t":"def flatMap[B](f: A => ScallopOption[B]): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"orElse","t":"def orElse[B >: A](alternative: => Option[B]): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"isDefined","t":"def isDefined: Boolean","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"org/rogach/scallop/ScallopOption"},
{"l":"api/org/rogach/scallop/ScallopOption$WithFilter.html","n":"WithFilter","t":"class WithFilter(p: A => Boolean)","d":"org/rogach/scallop/ScallopOption$WithFilter"},
{"l":"api/org/rogach/scallop/ScallopOption$WithFilter.html","n":"map","t":"def map[B](f: A => B): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption$WithFilter"},
{"l":"api/org/rogach/scallop/ScallopOption$WithFilter.html","n":"flatMap","t":"def flatMap[B](f: A => ScallopOption[B]): ScallopOption[B]","d":"org/rogach/scallop/ScallopOption$WithFilter"},
{"l":"api/org/rogach/scallop/ScallopOption$WithFilter.html","n":"foreach","t":"def foreach(f: A => Unit): Unit","d":"org/rogach/scallop/ScallopOption$WithFilter"},
{"l":"api/org/rogach/scallop/ScallopOption$WithFilter.html","n":"withFilter","t":"def withFilter(q: A => Boolean): WithFilter","d":"org/rogach/scallop/ScallopOption$WithFilter"},
{"l":"api/org/rogach/scallop/ScallopOptionBase.html","n":"ScallopOptionBase","t":"trait ScallopOptionBase","d":"org/rogach/scallop/ScallopOptionBase"},
{"l":"api/org/rogach/scallop/ScallopOptionGroup.html","n":"ScallopOptionGroup","t":"class ScallopOptionGroup(val header: String)","d":"org/rogach/scallop/ScallopOptionGroup"},
{"l":"api/org/rogach/scallop/ScallopOptionGroup.html","n":"header","t":"val header: String","d":"org/rogach/scallop/ScallopOptionGroup"},
{"l":"api/org/rogach/scallop/ScallopOptionGroup.html","n":"append","t":"def append(opts: ScallopOptionBase*): Unit","d":"org/rogach/scallop/ScallopOptionGroup"},
{"l":"api/org/rogach/scallop/Serialization.html","n":"Serialization","t":"trait Serialization extends Serializable","d":"org/rogach/scallop/Serialization"},
{"l":"api/org/rogach/scallop/Serialization.html","n":"writeReplace","t":"def writeReplace(): AnyRef","d":"org/rogach/scallop/Serialization"},
{"l":"api/org/rogach/scallop/SerializationProxy.html","n":"SerializationProxy","t":"class SerializationProxy(var orig: ScallopConf, val confClassName: String) extends Serializable","d":"org/rogach/scallop/SerializationProxy"},
{"l":"api/org/rogach/scallop/SerializationProxy.html","n":"confClassName","t":"val confClassName: String","d":"org/rogach/scallop/SerializationProxy"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"SimpleOption","t":"class SimpleOption(name: String, short: Option[Char], descr: String, required: Boolean, converter: ValueConverter[_], default: () => Option[Any], validator: Any => Boolean, argName: String, hidden: Boolean, noshort: Boolean) extends CliOption","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/SimpleOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/SimpleOption"},
{"l":"api/org/rogach/scallop/Subcommand.html","n":"Subcommand","t":"class Subcommand(commandNameAndAliases: String*) extends ScallopConf","d":"org/rogach/scallop/Subcommand"},
{"l":"api/org/rogach/scallop/Subcommand.html","n":"descr","t":"def descr(d: String): Unit","d":"org/rogach/scallop/Subcommand"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"ToggleOption","t":"class ToggleOption(name: String, default: () => Option[Boolean], short: Option[Char], noshort: Boolean, prefix: String, descrYes: String, descrNo: String, required: Boolean, hidden: Boolean) extends CliOption","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"descr","t":"def descr: String","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"validator","t":"def validator: Any => Boolean","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"converter","t":"def converter: ValueConverter[Boolean]","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/ToggleOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/ToggleOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"TrailingArgsOption","t":"class TrailingArgsOption(name: String, required: Boolean, descr: String, converter: ValueConverter[_], validator: Any => Boolean, default: () => Option[Any], hidden: Boolean) extends CliOption","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"isPositional","t":"def isPositional: Boolean","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"longNames","t":"def longNames: List[String]","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"shortNames","t":"def shortNames: List[Char]","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"requiredShortNames","t":"def requiredShortNames: List[Char]","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"argLine","t":"def argLine(sh: List[Char]): String","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgsOption.html","n":"helpInfo","t":"def helpInfo(sh: List[Char]): List[HelpInfo]","d":"org/rogach/scallop/TrailingArgsOption"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$.html","n":"TrailingArgumentsParser","t":"object TrailingArgumentsParser","d":"org/rogach/scallop/TrailingArgumentsParser$"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$.html","n":"parse","t":"def parse(leadingArgs: List[String], lastMultiArgOption: Option[(CliOption, String)], trailingArgs: List[String], trailingOptions: List[CliOption], resultAcc: ParseResult): ParseResult","d":"org/rogach/scallop/TrailingArgumentsParser$"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$$ParseResult.html","n":"ParseResult","t":"class ParseResult(result: List[(CliOption, String, Either[(String, List[String]), List[String]])], failedArgumentsCount: Int, excessArguments: List[String]) extends Ordered[ParseResult]","d":"org/rogach/scallop/TrailingArgumentsParser$$ParseResult"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$$ParseResult.html","n":"failedConverters","t":"val failedConverters: Int","d":"org/rogach/scallop/TrailingArgumentsParser$$ParseResult"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$$ParseResult.html","n":"compare","t":"def compare(other: ParseResult): Int","d":"org/rogach/scallop/TrailingArgumentsParser$$ParseResult"},
{"l":"api/org/rogach/scallop/TrailingArgumentsParser$$ParseResult.html","n":"isFailed","t":"def isFailed: Boolean","d":"org/rogach/scallop/TrailingArgumentsParser$$ParseResult"},
{"l":"api/org/rogach/scallop/Util$.html","n":"Util","t":"object Util","d":"org/rogach/scallop/Util$"},
{"l":"api/org/rogach/scallop/Util$.html","n":"format","t":"def format(formatString: String, args: Any*): String","d":"org/rogach/scallop/Util$"},
{"l":"api/org/rogach/scallop/Util$.html","n":"seqstr","t":"def seqstr(items: Seq[Any]): String","d":"org/rogach/scallop/Util$"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"ValueConverter","t":"trait ValueConverter[A]","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"parse","t":"def parse(s: List[(String, List[String])]): Either[String, Option[A]]","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"parseCached","t":"def parseCached(s: List[(String, List[String])]): Either[String, Option[A]]","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"argType","t":"val argType: V","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"argFormat","t":"def argFormat(name: String): String","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"map","t":"def map[B](fn: A => B): ValueConverter[B]","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/ValueConverter.html","n":"flatMap","t":"def flatMap[B](fn: A => Either[String, Option[B]]): ValueConverter[B]","d":"org/rogach/scallop/ValueConverter"},
{"l":"api/org/rogach/scallop/overrideColorOutput$.html","n":"overrideColorOutput","t":"object overrideColorOutput extends DynamicVariable[Option[Boolean]]","d":"org/rogach/scallop/overrideColorOutput$"},
{"l":"api/org/rogach/scallop/throwError$.html","n":"throwError","t":"object throwError extends DynamicVariable[Boolean]","d":"org/rogach/scallop/throwError$"},
{"l":"api/org/rogach/scallop/exceptions.html","n":"org.rogach.scallop.exceptions","t":"package org.rogach.scallop.exceptions","d":"org/rogach/scallop/exceptions"},
{"l":"api/org/rogach/scallop/exceptions/ExcessArguments.html","n":"ExcessArguments","t":"class ExcessArguments(args: Seq[String]) extends ScallopException","d":"org/rogach/scallop/exceptions/ExcessArguments"},
{"l":"api/org/rogach/scallop/exceptions/Exit$.html","n":"Exit","t":"object Exit","d":"org/rogach/scallop/exceptions/Exit$"},
{"l":"api/org/rogach/scallop/exceptions/Exit$.html","n":"unapply","t":"def unapply(r: ScallopResult): Boolean","d":"org/rogach/scallop/exceptions/Exit$"},
{"l":"api/org/rogach/scallop/exceptions/GenericScallopException.html","n":"GenericScallopException","t":"class GenericScallopException(msg: String) extends ScallopException","d":"org/rogach/scallop/exceptions/GenericScallopException"},
{"l":"api/org/rogach/scallop/exceptions/Help.html","n":"Help","t":"class Help(command: String) extends Exception with ScallopResult","d":"org/rogach/scallop/exceptions/Help"},
{"l":"api/org/rogach/scallop/exceptions/IdenticalOptionNames.html","n":"IdenticalOptionNames","t":"class IdenticalOptionNames(mess: String) extends ScallopException","d":"org/rogach/scallop/exceptions/IdenticalOptionNames"},
{"l":"api/org/rogach/scallop/exceptions/IllegalOptionParameters.html","n":"IllegalOptionParameters","t":"class IllegalOptionParameters(mess: String) extends ScallopException","d":"org/rogach/scallop/exceptions/IllegalOptionParameters"},
{"l":"api/org/rogach/scallop/exceptions/IncompleteBuildException.html","n":"IncompleteBuildException","t":"class IncompleteBuildException() extends ScallopException","d":"org/rogach/scallop/exceptions/IncompleteBuildException"},
{"l":"api/org/rogach/scallop/exceptions/MajorInternalException.html","n":"MajorInternalException","t":"class MajorInternalException() extends ScallopException","d":"org/rogach/scallop/exceptions/MajorInternalException"},
{"l":"api/org/rogach/scallop/exceptions/OptionNameGuessingException.html","n":"OptionNameGuessingException","t":"class OptionNameGuessingException(cause: Exception) extends ScallopException","d":"org/rogach/scallop/exceptions/OptionNameGuessingException"},
{"l":"api/org/rogach/scallop/exceptions/OptionNameGuessingFailure.html","n":"OptionNameGuessingFailure","t":"class OptionNameGuessingFailure() extends ScallopException","d":"org/rogach/scallop/exceptions/OptionNameGuessingFailure"},
{"l":"api/org/rogach/scallop/exceptions/OptionNameGuessingUnsupported.html","n":"OptionNameGuessingUnsupported","t":"class OptionNameGuessingUnsupported() extends ScallopException","d":"org/rogach/scallop/exceptions/OptionNameGuessingUnsupported"},
{"l":"api/org/rogach/scallop/exceptions/OptionReaderFailure.html","n":"OptionReaderFailure","t":"class OptionReaderFailure(mess: String) extends ScallopException","d":"org/rogach/scallop/exceptions/OptionReaderFailure"},
{"l":"api/org/rogach/scallop/exceptions/RequiredOptionNotFound.html","n":"RequiredOptionNotFound","t":"class RequiredOptionNotFound(name: String) extends ScallopException","d":"org/rogach/scallop/exceptions/RequiredOptionNotFound"},
{"l":"api/org/rogach/scallop/exceptions/ScallopException.html","n":"ScallopException","t":"class ScallopException(val message: String) extends Exception with ScallopResult","d":"org/rogach/scallop/exceptions/ScallopException"},
{"l":"api/org/rogach/scallop/exceptions/ScallopException.html","n":"message","t":"val message: String","d":"org/rogach/scallop/exceptions/ScallopException"},
{"l":"api/org/rogach/scallop/exceptions/ScallopException$.html","n":"ScallopException","t":"object ScallopException","d":"org/rogach/scallop/exceptions/ScallopException$"},
{"l":"api/org/rogach/scallop/exceptions/ScallopException$.html","n":"unapply","t":"def unapply(e: ScallopException): Option[String]","d":"org/rogach/scallop/exceptions/ScallopException$"},
{"l":"api/org/rogach/scallop/exceptions/ScallopResult.html","n":"ScallopResult","t":"trait ScallopResult","d":"org/rogach/scallop/exceptions/ScallopResult"},
{"l":"api/org/rogach/scallop/exceptions/UnknownOption.html","n":"UnknownOption","t":"class UnknownOption(optionName: String) extends ScallopException","d":"org/rogach/scallop/exceptions/UnknownOption"},
{"l":"api/org/rogach/scallop/exceptions/ValidationFailure.html","n":"ValidationFailure","t":"class ValidationFailure(mess: String) extends ScallopException","d":"org/rogach/scallop/exceptions/ValidationFailure"},
{"l":"api/org/rogach/scallop/exceptions/Version$.html","n":"Version","t":"object Version extends Exception with ScallopResult","d":"org/rogach/scallop/exceptions/Version$"},
{"l":"api/org/rogach/scallop/exceptions/WrongOptionFormat.html","n":"WrongOptionFormat","t":"class WrongOptionFormat(optionName: String, args: String, msg: String) extends ScallopException","d":"org/rogach/scallop/exceptions/WrongOptionFormat"},
{"l":"api/org/rogach/scallop/tokenize.html","n":"org.rogach.scallop.tokenize","t":"package org.rogach.scallop.tokenize","d":"org/rogach/scallop/tokenize"},
{"l":"api/org/rogach/scallop/tokenize/ArgumentTokenizer$.html","n":"ArgumentTokenizer","t":"object ArgumentTokenizer","d":"org/rogach/scallop/tokenize/ArgumentTokenizer$"},
{"l":"api/org/rogach/scallop/tokenize/ArgumentTokenizer$.html","n":"tokenize","t":"def tokenize(input: String): TokenizationResult","d":"org/rogach/scallop/tokenize/ArgumentTokenizer$"},
{"l":"api/index.html","n":"API","t":" API","d":"api"}];